#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура Основной_ОдинИсточник_ДваПриемника_ВДокументооборотОбработкаПолученияСообщения(Сообщение, Отказ)
	
	ЗаписьЖурналаРегистрации(шинаОбменСШиной1С.ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, НСтр("ru = 'Старт обработки сообщения';"));	
	Попытка
		СообщениеСтрока = шинаОбменСШиной1С.ПолучитьСтрокуИзПотока(Сообщение.ПолучитьТелоКакПоток()); 
		шинаОбменСШиной1С.УдалитьСкрытыеСимволыВКонцеСообщения(СообщениеСтрока);
		Обработки.ВыгрузкаЗагрузкаEnterpriseData.Создать().ЗагрузкаСообщения(Новый Структура("ТекстXML", СообщениеСтрока), Неопределено); 
			
		ЗаписьЖурналаРегистрации(шинаОбменСШиной1С.ИмяСобытияЖР(), УровеньЖурналаРегистрации.Информация,,, НСтр("ru = 'Сообщение обработано успешно';"));
	Исключение
	    ЗаписьЖурналаРегистрации(шинаОбменСШиной1С.ИмяСобытияЖР(), УровеньЖурналаРегистрации.Ошибка,,, НСтр("ru = 'Ошибка:';") + ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));  
		//ВызватьИсключение ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());  // При таком варианте ошибочное сообщение останется в канале и постоянно будут выполняться попытки его считать
	КонецПопытки;

КонецПроцедуры

#КонецОбласти

#КонецЕсли